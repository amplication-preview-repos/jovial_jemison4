/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PatientTreatment as PrismaPatientTreatment,
} from "@prisma/client";
import { PatientTreatmentCreateInput } from "./PatientTreatmentCreateInput";
import { PatientTreatment } from "./PatientTreatment";

export class PatientTreatmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PatientTreatmentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.patientTreatment.count(args);
  }

  async patientTreatments(
    args: Prisma.PatientTreatmentFindManyArgs
  ): Promise<PrismaPatientTreatment[]> {
    return this.prisma.patientTreatment.findMany(args);
  }
  async patientTreatment(
    args: Prisma.PatientTreatmentFindUniqueArgs
  ): Promise<PrismaPatientTreatment | null> {
    return this.prisma.patientTreatment.findUnique(args);
  }
  async createPatientTreatment(
    args: Prisma.PatientTreatmentCreateArgs
  ): Promise<PrismaPatientTreatment> {
    return this.prisma.patientTreatment.create(args);
  }
  async updatePatientTreatment(
    args: Prisma.PatientTreatmentUpdateArgs
  ): Promise<PrismaPatientTreatment> {
    return this.prisma.patientTreatment.update(args);
  }
  async deletePatientTreatment(
    args: Prisma.PatientTreatmentDeleteArgs
  ): Promise<PrismaPatientTreatment> {
    return this.prisma.patientTreatment.delete(args);
  }
  async CreatePatientTreatmentEntry(
    args: PatientTreatmentCreateInput
  ): Promise<PatientTreatment> {
    throw new Error("Not implemented");
  }
}
